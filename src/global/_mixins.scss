@use 'sass:meta';
@use './config';

/// GENERATE UTILITY CLASSES
/// ----------
///
@mixin gen-utils($label, $values, $responsive: false) {
  @if meta.type-of($values) == list {
    /// $values could be a list, e.g. `gen-utils('text-align', (left, center, right))`.
    /// create classes like `.text-align:center` and `.text-align:center!`.
    @each $val in $values {
      .#{$label}\:#{$val} { #{$label}: $val; }
      .#{$label}\:#{$val}\! { #{$label}: $val !important; }
    }

    /// create classes like `.text-align:center@sm` and `.text-align:left@md!`.
    @if $responsive {
      @each $point, $pixels in config.$breaks {
        @each $val in $values {
          .#{$label}\:#{$val}\@#{point} {
            @media screen and (max-width: $pixels) {
              #{$label}: $val;
            }
          }

          .#{$label}\:#{$val}\@#{$point}\! {
            @media screen and (max-width: $pixels) {
              #{$label}: $val !important;
            }
          }
        }
      }
    }
  } @else if meta.type-of($values) == map {
    /// more likely, $values is a map, e.g. `gen-utils('color', (red: #ff0000, blue: #0000ff))`.
    /// create classes like `.color:red` and `.background-color:blue!`
    @each $key, $val in $values {
      .#{$label}\:#{"" + $key} { #{$label}: $val; }
      .#{$label}\:#{"" + $key}\! { #{$label}: $val !important; }
    }

    /// create classes like `.color:error@sm` and `.color:success@xl!`.
    @if $responsive {
      @each $point, $pixels in config.$breaks {
        @each $key, $val in $values {
          .#{$label}\:#{"" + $key}\@#{$point} {
            @media screen and (max-width: $pixels) {
              #{$label}: $val;
            }
          }

          .#{$label}\:#{"" + $key}\@#{$point}\! {
            @media screen and (max-width: $pixels) {
              #{$label}: $val !important;
            }
          }
        }
      }
    }
  }
}
